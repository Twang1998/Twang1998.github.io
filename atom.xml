<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fraunhofer&#39;s Test Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-12-14T11:54:39.587Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Twang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>zero</title>
    <link href="http://yoursite.com/2020/12/14/zero/"/>
    <id>http://yoursite.com/2020/12/14/zero/</id>
    <published>2020-12-14T11:53:23.000Z</published>
    <updated>2020-12-14T11:54:39.587Z</updated>
    
    <content type="html"><![CDATA[<p>majaro使用</p><a id="more"></a><h2 id="manjaro"><a href="#manjaro" class="headerlink" title="manjaro"></a>manjaro</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi</span><br><span class="line">sudo pacman -S archlinuxcn-keyring</span><br><span class="line">sudo pacman -S fcitx-im</span><br><span class="line">sudo pacman -S fcitx-im fcitx-configtool fcitx-sunpinyin fcitx-cloudpinyin</span><br><span class="line">sudo vim .xprofile</span><br><span class="line">sudo pacman -Ss vim</span><br><span class="line">sudo pacman -Syu</span><br><span class="line">sudo pacman -S vim</span><br><span class="line">yay -Syu</span><br><span class="line">yay -S google-chrome</span><br><span class="line">yay -Ss vscode</span><br><span class="line">yay -Ss visual-studio-code</span><br><span class="line">yay -Ss visual-studio-code-bin</span><br><span class="line">yay -Si visual-studio-code-bin</span><br><span class="line">yay -S visual-studio-code-bin</span><br><span class="line">yay -Qs visual-studio-code-bin</span><br><span class="line">yay -Qi visual-studio-code-bin</span><br><span class="line">yay -QL visual-studio-code-bin</span><br><span class="line">yay -Ql visual-studio-code-bin</span><br><span class="line">sudo pacman R firefox</span><br><span class="line">sudo pacman -R firefox</span><br><span class="line">sudo pacman -R firefox firefox-gnome-theme-maia</span><br><span class="line">sudo grub-update</span><br><span class="line">blkid</span><br><span class="line">sudo blkid</span><br><span class="line">lsblk</span><br><span class="line">sudo mount /dev/nvme0n1p5 /mnt</span><br><span class="line">cd /mnt</span><br><span class="line">cd System\ Volume\ Information</span><br><span class="line">cd ..</span><br><span class="line">sudo umount /mnt</span><br><span class="line">sudo pacman -Ss boot-repair</span><br><span class="line">sudo update-grub</span><br><span class="line">sudo reboot</span><br><span class="line">sudo pacman -Ss tpm</span><br><span class="line">sudo pacman -Ss tmux-pl</span><br><span class="line">yay -S tpm</span><br><span class="line">yay -Si tpm</span><br><span class="line">git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm</span><br><span class="line">tmux</span><br><span class="line">sudo pacman -Ss vim-plug</span><br><span class="line">sudo pacman -S vim-plug</span><br><span class="line">vim .vimrc</span><br><span class="line">vim</span><br><span class="line">sudo pacman -Qs cmake</span><br><span class="line">sudo pacman -S base-devel</span><br><span class="line">sudo pacman -S cmake git</span><br><span class="line">git clone https://github.com/spartazhc/dotfiles .dotfiles</span><br><span class="line">sudo pacman -Ss tmux</span><br><span class="line">sudo pacman -S tmux</span><br><span class="line">./install_dotfiles.sh</span><br><span class="line">cat install_plugins.sh</span><br><span class="line">sudo pacman -S mpv</span><br><span class="line">ls --color</span><br><span class="line">sudo vim /usr/share/zsh/manjaro-zsh-config</span><br><span class="line">cat .zshrc</span><br><span class="line">sudo vim /usr/share/zsh/manjaro-zsh-prompt</span><br><span class="line">vim .zshrc_custom</span><br><span class="line">cd .dotfiles</span><br><span class="line">sudo pacman -Ss typora</span><br><span class="line">yay -Ss trojan</span><br><span class="line">yay -Si trojan</span><br><span class="line">yay -S trojan</span><br><span class="line">sudo pacman -S typora</span><br><span class="line">sudo ./torjan</span><br><span class="line">sudo ./trojan</span><br><span class="line">trojan</span><br><span class="line">yay -Ss wechat</span><br><span class="line">yay -S electronic-wechat-bin</span><br><span class="line">cd /tmp</span><br><span class="line">wget https://s.trojanflare.com/subscription/shadowrocket/80251f48-b43e-43d0-ba90-e681366a6023</span><br><span class="line">vim 80251f48-b43e-43d0-ba90-e681366a6023</span><br><span class="line">wget https://s.trojanflare.com/subscription/shadowrocket/80251f48-b43e-43d0-ba90-e681366a6023 config.json</span><br><span class="line">killall trojan</span><br><span class="line">mkdir clash</span><br><span class="line">wget https://s.trojanflare.com/clashx/80251f48-b43e-43d0-ba90-e681366a6023 -O config.yaml</span><br><span class="line">clash -h</span><br><span class="line">scp spartazhc@homeofspartazhc.tpddns.cn:.config/clash/</span><br><span class="line">scp spartazhc@homeofspartazhc.tpddns.cn:.config/clash/mmdb</span><br><span class="line">scp spartazhc@homeofspartazhc.tpddns.cn:.config/clash/Country.mmdb</span><br><span class="line">scp spartazhc@homeofspartazhc.tpddns.cn:.config/clash/Country.mmdb .</span><br><span class="line">vim config.yaml</span><br><span class="line">clash -d /home/tw/.config/clash</span><br><span class="line">sudo systemctl enable clash@tw.service</span><br><span class="line">sudo systemctl start clash@tw.service</span><br><span class="line">sudo trojan</span><br><span class="line">curl https://s.trojanflare.com/clashx/80251f48-b43e-43d0-ba90-e681366a6023</span><br><span class="line">sudo pacman -S clash</span><br><span class="line">trojan -h</span><br><span class="line">sudo vim /etc/trojan/config.json</span><br><span class="line">sudo trojan &amp;</span><br><span class="line">pkill -f trojan</span><br><span class="line">sudo pkill -f trojan</span><br><span class="line">sudo trojan </span><br><span class="line">ps -ef |grep trojan</span><br><span class="line">mv 80251f48-b43e-43d0-ba90-e681366a6023 config.json</span><br><span class="line">sudo trojan  -c config.json</span><br><span class="line">curl https://s.trojanflare.com/subscription/shadowrocket/80251f48-b43e-43d0-ba90-e681366a6023</span><br><span class="line">curl trojan://uMJpcqzrKjwjQvb5S7@fm1-3.sstr-api.xyz:443</span><br><span class="line">sudo pacman -R trojan</span><br><span class="line">yay -S activitywatch-bin</span><br><span class="line">cd .config</span><br><span class="line">cd clash</span><br><span class="line">clash</span><br><span class="line">sudo pacman -Ss wps</span><br><span class="line">sudo pacman -S wps-office</span><br><span class="line">sudo shutdown now</span><br></pre></td></tr></table></figure><h3 id="1-输入法"><a href="#1-输入法" class="headerlink" title="1.输入法"></a>1.输入法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S fcitx-im fcitx-configtool fcitx-sunpinyin fcitx-cloudpinyin</span><br><span class="line">sudo vim .xprofile</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export GTK_IM_MODULE=fcitx                                                 </span><br><span class="line">export QT_IM_MODULE=fcitx</span><br><span class="line">export XMODIFIERS=”@im=fcitx”</span><br></pre></td></tr></table></figure><h3 id="2-装软件"><a href="#2-装软件" class="headerlink" title="2.装软件"></a>2.装软件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Ss vim</span><br><span class="line">sudo pacman -Syu</span><br><span class="line">sudo pacman -S vim</span><br><span class="line">yay -Syu</span><br><span class="line">yay -S google-chrome</span><br><span class="line">yay -Ss vscode</span><br><span class="line">yay -Ss visual-studio-code</span><br><span class="line">yay -Ss visual-studio-code-bin</span><br><span class="line">yay -Si visual-studio-code-bin</span><br><span class="line">yay -S visual-studio-code-bin</span><br><span class="line">yay -Qs visual-studio-code-bin</span><br><span class="line">yay -Qi visual-studio-code-bin</span><br><span class="line">yay -QL visual-studio-code-bin  #problem </span><br><span class="line">yay -Ql visual-studio-code-bin</span><br><span class="line">sudo pacman R firefox</span><br><span class="line">sudo pacman -R firefox</span><br><span class="line">sudo pacman -R firefox firefox-gnome-theme-maia</span><br></pre></td></tr></table></figure><h3 id="3-服务"><a href="#3-服务" class="headerlink" title="3.服务"></a>3.服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable sshd.service 开机启动</span><br><span class="line">systemctl start sshd.service 立即启动</span><br><span class="line">systemctl restart sshd.service 立即重启</span><br><span class="line">systemctl enable servicename;设置为开机启动;</span><br><span class="line">systemctl disable servicename;禁止开机启动;</span><br><span class="line"></span><br><span class="line">pacman -Ql zerotier-one</span><br><span class="line">zerotier-one /usr/lib/systemd/system/zerotier-one.service</span><br><span class="line"></span><br><span class="line">systemctl list-unit-files --type=service |grep clash              </span><br><span class="line">clash@.service                             indirect        disabled</span><br><span class="line"></span><br><span class="line">ystemctl list-unit-files --type=service |grep zerotier           </span><br><span class="line">zerotier-one.service                       enabled         disabled</span><br><span class="line"></span><br><span class="line">systemctl is-enabled clash.service  </span><br><span class="line">Failed to get unit file state for clash.service: No such file or directory</span><br><span class="line"></span><br><span class="line">systemctl is-enabled clash@.service                    </span><br><span class="line">indirect</span><br></pre></td></tr></table></figure><h3 id="4-curl-amp-wget"><a href="#4-curl-amp-wget" class="headerlink" title="4.curl &amp; wget"></a>4.curl &amp; wget</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -O http://man.linuxde.net/text.iso               #O大写，不用O只是打印内容不会下载</span><br><span class="line">wget http://www.linuxde.net/text.iso                  #不用参数，直接下载文件</span><br><span class="line"></span><br><span class="line">curl -o rename.iso http://man.linuxde.net/text.iso         #o小写</span><br><span class="line">wget -O rename.zip http://www.linuxde.net/text.iso         #O大写</span><br></pre></td></tr></table></figure><h3 id="5-常用命令"><a href="#5-常用命令" class="headerlink" title="5.常用命令"></a>5.常用命令</h3><p><a href="https://my.oschina.net/u/4172591/blog/3190284" target="_blank" rel="noopener">参考</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">输出系统基本信息:sudo screenfetch</span><br><span class="line">强制关机:sudo shutdown now</span><br><span class="line">升级系统:sudo pacman -Syyu</span><br><span class="line">清理系统中无用的包:sudo pacman -R $(pacman -Qdtq)</span><br><span class="line">清除已下载的安装包:sudo pacman -Scc</span><br><span class="line">显示文件系统的磁盘使用情况:sudo df -h或sudo df -hT</span><br><span class="line">显示文件系统的磁盘使用情况:sudo fdisk -u -l</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">安装应用 sudo pacman -S &apos;应用名&apos;</span><br><span class="line">删除应用 sudo pacman -R &apos;应用名&apos;</span><br><span class="line">升级应用 sudo pacman -Syu &apos;应用名&apos;</span><br><span class="line"></span><br><span class="line">pacman -Ss abc                   搜索有关abc信息的包</span><br><span class="line">pacman -Si abc                    从数据库中搜索包abc的信息</span><br><span class="line">pacman -R abc                     删除abc包</span><br><span class="line">pacman -Rc abc                   删除abc包和依赖abc的包</span><br><span class="line"></span><br><span class="line">pacman -Q                           列出系统中所有的包</span><br><span class="line">pacman -Q package             在本地包数据库搜索(查询)指定软件包</span><br><span class="line">pacman -Qi package            在本地包数据库搜索(查询)指定软件包并列出相关信息</span><br><span class="line"></span><br><span class="line">pacman -U    安装本地包</span><br><span class="line">pacman -Sw    下载但不安装</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1、添加新账户</span><br><span class="line">useradd username新建账户;</span><br><span class="line">useradd -d /home/xxx -m xxx创建用户，并同时生成用户目录，不然账户无法正常启用;</span><br><span class="line">passwd username修改密码;</span><br><span class="line">userdel -f username删除账户及其配置文件;</span><br><span class="line">usermod -G gpname usrname修改用户所属组;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yay安装好后，应该可以使用了，请注意，你不需要使用sudo权限</span><br><span class="line"></span><br><span class="line">yay -S package   使用yay从AUR安装软件包</span><br><span class="line">yay -Rns package   删除包</span><br><span class="line">yay -Syu 升级所有已安装的包</span><br><span class="line"></span><br><span class="line">yay -Yc   删除系统上所有不需要的依赖项</span><br></pre></td></tr></table></figure><h3 id="6-sudo"><a href="#6-sudo" class="headerlink" title="6.sudo"></a>6.sudo</h3><p>可以通过修改 /etc/sudoers 文件 或者 将配置文件添加到 /etc/sudoers.d 目录来配置用户访问权限</p><p>1.在/etc/sudoers 文件末尾追加 tw ALL=(ALL) NOPASSWD:ALL</p><p>2.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/sudoers.d/tw   #文件最好以用户名命名</span><br><span class="line">文件内只要上边那一句话，保存并退出即可。</span><br></pre></td></tr></table></figure><h3 id="7-桌面图标"><a href="#7-桌面图标" class="headerlink" title="7.桌面图标"></a>7.桌面图标</h3><p>插件 desktop icon ng 控制</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;majaro使用&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>twang</title>
    <link href="http://yoursite.com/2019/12/20/twang/"/>
    <id>http://yoursite.com/2019/12/20/twang/</id>
    <published>2019-12-20T11:36:37.000Z</published>
    <updated>2019-12-20T11:36:37.658Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Python读图</title>
    <link href="http://yoursite.com/2019/12/15/Python%E8%AF%BB%E5%9B%BE/"/>
    <id>http://yoursite.com/2019/12/15/Python读图/</id>
    <published>2019-12-14T16:00:00.000Z</published>
    <updated>2019-12-15T13:11:18.490Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Python</strong>中各种读图方式比较</p><a id="more"></a><h3 id="Python读图"><a href="#Python读图" class="headerlink" title="Python读图"></a>Python读图</h3><p> <a href="https://www.jianshu.com/p/af854c53ae20" target="_blank" rel="noopener">https://www.jianshu.com/p/af854c53ae20</a> </p><p> <a href="https://blog.csdn.net/renelian1572/article/details/78761278" target="_blank" rel="noopener">https://blog.csdn.net/renelian1572/article/details/78761278</a> </p><h3 id="1-opencv"><a href="#1-opencv" class="headerlink" title="1.opencv"></a>1.opencv</h3><p>涉及函数： cv2.imread</p><p>参考网站：<a href=" https://docs.scipy.org/doc/scipy-0.18.1/reference/generated/scipy.misc.imread.html#scipy.misc.imread " target="_blank" rel="noopener"> 1 </a></p><h3 id="2-PIL"><a href="#2-PIL" class="headerlink" title="2.PIL"></a>2.PIL</h3><p>涉及函数：PIL.Image.open</p><p>参考网站：<a href="  https://pillow.readthedocs.io/en/latest/reference/Image.html#PIL.Image.open  " target="_blank" rel="noopener"> 1 </a></p><p> <a href="https://blog.csdn.net/sunmingyang1987/article/details/100418432" target="_blank" rel="noopener">https://blog.csdn.net/sunmingyang1987/article/details/100418432</a> </p><p> 这是一个懒惰的操作；此函数标识文件，但文件保持打开状态，直到尝试处理数据（或调用load（）方法），才会从文件中读取实际图像数据。 </p><ol><li>PIL image转换成array</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img = np.asarray(image)</span><br></pre></td></tr></table></figure><p>需要注意的是，如果出现read-only错误，并不是转换的错误，一般是你读取的图片的时候，默认选择的是”r”,”rb”模式有关。</p><p>修正的办法:　手动修改图片的读取状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img.flags.writeable = True  # 将数组改为读写模式</span><br></pre></td></tr></table></figure><ol start="2"><li><p>p = img.load()  <em># img = Image.open(‘x.png’)</em> <em># 可以用p[x,y]的方式取像素</em> </p><p>arr = np.array(img) <em># np = numpy</em> </p></li><li><p>array转换成image</p></li></ol><p><code>Image.fromarray(np.uint8(img))</code> </p><h3 id="3-scipy"><a href="#3-scipy" class="headerlink" title="3.scipy"></a>3.scipy</h3><p>涉及函数： <code>scipy.misc.imread</code>(<em>name<strong>*,</strong> <em>flatten=False**</em>,** *mode=None</em>)</p><p> Read an image from a file as an array .</p><p>参考网站：<a href=" https://docs.scipy.org/doc/scipy-0.18.1/reference/generated/scipy.misc.imread.html#scipy.misc.imread " target="_blank" rel="noopener"> 1 </a></p><p>Parameters:</p><p><strong>name</strong> : str or file objectThe file name or file object to be read.</p><p><strong>flatten</strong> : bool, optionalIf True, flattens the color layers into a single gray-scale layer.</p><p><strong>mode</strong> : str, optionalMode to convert image to, e.g. <code>&#39;RGB&#39;</code>. See the Notes for more details. |</p><p>Returns: </p><p><strong>imread</strong> : ndarrayThe array obtained by reading the image. |</p><p>*<em>note:  [<code>imread</code>]uses the Python Imaging Library (PIL) to read an image.  *</em></p><p> <code>imread</code> is deprecated in SciPy 1.0.0, and will be removed in 1.2.0. Use <a href="http://imageio.github.io/" target="_blank" rel="noopener"><code>imageio.imread</code></a> instead. </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;中各种读图方式比较&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="read image" scheme="http://yoursite.com/tags/read-image/"/>
    
  </entry>
  
  <entry>
    <title>args</title>
    <link href="http://yoursite.com/2019/12/15/args/"/>
    <id>http://yoursite.com/2019/12/15/args/</id>
    <published>2019-12-14T16:00:00.000Z</published>
    <updated>2019-12-15T13:06:50.611Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Python</strong>中<strong>argparse</strong>模块学习记录</p><a id="more"></a><h4 id="0-args"><a href="#0-args" class="headerlink" title="0.args"></a>0.args</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ap = argparse.ArgumentParser()</span><br><span class="line">ap.add_argument(<span class="string">"-database"</span>, required = <span class="literal">True</span>,</span><br><span class="line">help = <span class="string">"Path to database which contains images to be indexed"</span>)</span><br><span class="line">ap.add_argument(<span class="string">"-index"</span>, required = <span class="literal">True</span>,</span><br><span class="line">help = <span class="string">"Name of index file"</span>)</span><br><span class="line">args = ap.parse_args() <span class="keyword">or</span> args = vars(ap.parse_args())  !!!!!</span><br><span class="line">args[<span class="string">'database'</span>]   <span class="keyword">or</span>  args.database</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">print(type(args))  </span><br><span class="line">print(args)</span><br><span class="line"></span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">argparse</span>.<span class="title">Namespace</span>'&gt;</span></span><br><span class="line"><span class="class"><span class="title">Namespace</span><span class="params">(database=<span class="string">'scene'</span>, index=<span class="string">'fea.h5'</span>)</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> '<span class="title">dict</span>'&gt;</span></span><br><span class="line">&#123;'database': 'scene', 'index': 'fea.h5'&#125;</span><br></pre></td></tr></table></figure><p> <strong>vars()</strong> 函数返回对象object的属性和属性值的字典对象。 </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;中&lt;strong&gt;argparse&lt;/strong&gt;模块学习记录&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="argparse" scheme="http://yoursite.com/tags/argparse/"/>
    
  </entry>
  
  <entry>
    <title>conda</title>
    <link href="http://yoursite.com/2019/12/15/conda/"/>
    <id>http://yoursite.com/2019/12/15/conda/</id>
    <published>2019-12-14T16:00:00.000Z</published>
    <updated>2019-12-15T13:09:33.419Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Python</strong>环境管理工具<strong>conda</strong>学习记录</p><a id="more"></a><h3 id="conda"><a href="#conda" class="headerlink" title="conda"></a>conda</h3><p> conda create -n tensorflow python=3.5</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;环境管理工具&lt;strong&gt;conda&lt;/strong&gt;学习记录&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="conda envs" scheme="http://yoursite.com/tags/conda-envs/"/>
    
  </entry>
  
  <entry>
    <title>git for windows</title>
    <link href="http://yoursite.com/2019/12/15/git/"/>
    <id>http://yoursite.com/2019/12/15/git/</id>
    <published>2019-12-14T16:00:00.000Z</published>
    <updated>2019-12-15T13:09:53.391Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Git</strong>学习记录</p><a id="more"></a><h3 id="git（windows）"><a href="#git（windows）" class="headerlink" title="git（windows）"></a>git（windows）</h3><p>参考：<a href="https://blog.csdn.net/u014103733/article/details/79190004" target="_blank" rel="noopener">https://blog.csdn.net/u014103733/article/details/79190004</a></p><p>1.安装git，没啥好说的</p><p>2.配置一下用户名，邮箱</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config--global user.name &quot;your_account&quot;</span><br><span class="line"></span><br><span class="line">git config –globaluser.email youremail@example.com</span><br></pre></td></tr></table></figure><p>3.生成SSH</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C  371515509@qq.com</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/c/Users/37151/.ssh/id_rsa):</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved in /c/Users/37151/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved in /c/Users/37151/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:cCDnlgva340pnFpZ6y78Y9HjBtsobzstyjSm7FKO3nA 371515509@qq.com</span><br><span class="line">The key&apos;s randomart image is:</span><br><span class="line">+---[RSA 3072]----+</span><br><span class="line">|    . o          |</span><br><span class="line">|     + o         |</span><br><span class="line">|    . = .        |</span><br><span class="line">|   o o +         |</span><br><span class="line">|  . . . S.       |</span><br><span class="line">|    .o =o=o      |</span><br><span class="line">|  .+E.@ =O..     |</span><br><span class="line">|  o=.B++O =      |</span><br><span class="line">| ..o* oX**       |</span><br><span class="line">+----[SHA256]-----+</span><br></pre></td></tr></table></figure><p>4.github添加</p><p>没啥好说的，title随意</p><p>4.5   </p><p>5.可以git clone 了</p><p>clone 自动绑定远程仓库，接下来可以搞事了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$git add .</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>问题不大</p><p>6.不clone的话</p><p>从初始化仓库开始</p><p><a href="https://www.jianshu.com/p/8e46d88db49e" target="_blank" rel="noopener">https://www.jianshu.com/p/8e46d88db49e</a></p><p>①初始化本地仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>②将所有文件添加到本地仓库（add 后面的空格+点 不能少）</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">add</span> .</span><br></pre></td></tr></table></figure><p>③将项目提交到本地git仓库 （“first commit” 是备注信息 自己随便写）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">"first commit"</span></span><br></pre></td></tr></table></figure><p>④本地git仓库与远程仓库关联（git@<a href="https://links.jianshu.com/go?to=xx.xx.xx.xx%3Arepos%2Fxxx%2Fxxx%2Fxxx.git" target="_blank" rel="noopener">xx.xx.xx.xx:repos/xxx/xxx/xxx.git</a> 是远程仓库地址）</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote <span class="keyword">add</span> origin git@xx.xx.xx.xx:repos/xxx/xxx/xxx.git</span><br></pre></td></tr></table></figure><p>⑤将项目推送到远程仓库(master是分支名 -f 强制推送)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master -f 或者 git push origin master</span><br><span class="line"></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>执行⑤出错的话 执行下面命令后 在执行⑤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase origin master</span><br></pre></td></tr></table></figure><p>⑥强拉失败 执行如下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master --allow-unrelated-histories</span><br></pre></td></tr></table></figure><p>ssh-add ~./.ssh/id_rsa</p><p>git remote rm origin</p><p>git remote add urlcopy</p><p>echo *** &gt;&gt;.gitignore</p><p>ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a> </p><p><strong>远程仓库</strong></p><p><a href="https://git-scm.com/book/zh/v1/Git-基础-远程仓库的使用" target="_blank" rel="noopener">https://git-scm.com/book/zh/v1/Git-%E5%9F%BA%E7%A1%80-%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8</a></p><h3 id="查看当前的远程库"><a href="#查看当前的远程库" class="headerlink" title="查看当前的远程库"></a><a href="https://git-scm.com/book/zh/v1/Git-基础-远程仓库的使用#查看当前的远程库" target="_blank" rel="noopener">查看当前的远程库</a></h3><p>要查看当前配置有哪些远程仓库，可以用 <code>git remote</code> 命令，它会列出每个远程库的简短名字。在克隆完某个项目后，至少可以看到一个名为<strong>origin 的远程库</strong>，Git 默认使用这个名字来标识你所克隆的原始仓库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git clone git://github.com/schacon/ticgit.git</span><br><span class="line">Cloning into &apos;ticgit&apos;...</span><br><span class="line">remote: Reusing existing pack: 1857, done.</span><br><span class="line">remote: Total 1857 (delta 0), reused 0 (delta 0)</span><br><span class="line">Receiving objects: 100% (1857/1857), 374.35 KiB | 193.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (772/772), done.</span><br><span class="line">Checking connectivity... done.</span><br><span class="line">$ cd ticgit</span><br><span class="line">$ git remote</span><br><span class="line">origin</span><br></pre></td></tr></table></figure><p>也可以加上 <code>-v</code> 选项（译注：此为 <code>--verbose</code> 的简写，取首字母），显示对应的克隆地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br><span class="line">origin  git://github.com/schacon/ticgit.git (fetch)</span><br><span class="line">origin  git://github.com/schacon/ticgit.git (push)</span><br></pre></td></tr></table></figure><p>如果有多个远程仓库，此命令将全部列出。比如在我的 Grit 项目中，可以看到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ cd grit</span><br><span class="line">$ git remote -v</span><br><span class="line">bakkdoor  git://github.com/bakkdoor/grit.git</span><br><span class="line">cho45     git://github.com/cho45/grit.git</span><br><span class="line">defunkt   git://github.com/defunkt/grit.git</span><br><span class="line">koke      git://github.com/koke/grit.git</span><br><span class="line">origin    git@github.com:mojombo/grit.git</span><br></pre></td></tr></table></figure><p>这样一来，我就可以非常轻松地从这些用户的仓库中，拉取他们的提交到本地。请注意，上面列出的地址只有 origin 用的是 SSH URL 链接，所以也只有这个仓库我能推送数据上去（我们会在第四章解释原因）。</p><h3 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a><a href="https://git-scm.com/book/zh/v1/Git-基础-远程仓库的使用#添加远程仓库" target="_blank" rel="noopener">添加远程仓库</a></h3><p>要添加一个新的远程仓库，可以指定一个简单的名字，以便将来引用，运行 <code>git remote add [shortname] [url]</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git remote</span><br><span class="line">origin</span><br><span class="line">$ git remote add pb git://github.com/paulboone/ticgit.git</span><br><span class="line">$ git remote -v</span><br><span class="line">origin  git://github.com/schacon/ticgit.git</span><br><span class="line">pb  git://github.com/paulboone/ticgit.git</span><br></pre></td></tr></table></figure><p>现在可以用字符串 <code>pb</code> 指代对应的仓库地址了。</p><p><a href="https://git-scm.com/book/zh/v1/%E8%B5%B7%E6%AD%A5" target="_blank" rel="noopener">https://git-scm.com/book/zh/v1/%E8%B5%B7%E6%AD%A5</a>  牛批</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt;学习记录&lt;/p&gt;
    
    </summary>
    
      <category term="git" scheme="http://yoursite.com/categories/git/"/>
    
    
  </entry>
  
  <entry>
    <title>numpy学习</title>
    <link href="http://yoursite.com/2019/12/15/numpy%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2019/12/15/numpy学习/</id>
    <published>2019-12-14T16:00:00.000Z</published>
    <updated>2019-12-15T13:09:13.875Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Python</strong>中<strong>numpy</strong>模块学习记录</p><a id="more"></a><h3 id="numpy学习-import-numpy-as-np"><a href="#numpy学习-import-numpy-as-np" class="headerlink" title="numpy学习 import numpy as np"></a>numpy学习 import numpy as np</h3><h4 id="1-一维向量的append"><a href="#1-一维向量的append" class="headerlink" title="1.一维向量的append"></a>1.一维向量的append</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a=np.array([<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">4</span>])</span><br><span class="line">a = np.append(a,<span class="number">7</span>)</span><br><span class="line"><span class="comment"># a = np.append(a,[7]) 也行(实际上这种情况下[]几层都行)</span></span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line">[<span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">4</span> <span class="number">7</span>]</span><br></pre></td></tr></table></figure><h4 id="2-二维矩阵的append-维度很关键"><a href="#2-二维矩阵的append-维度很关键" class="headerlink" title="2.二维矩阵的append(维度很关键)"></a>2.二维矩阵的append(维度很关键)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line">b=np.array([<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>])</span><br><span class="line">a = np.append(a,[b],axis=<span class="number">0</span>)</span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line">[[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"> [<span class="number">7</span> <span class="number">8</span> <span class="number">9</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line">b=np.array([<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>])</span><br><span class="line">a = np.append(a,b,axis=<span class="number">0</span>)</span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line">ValueError: all the input arrays must have same number of dimensions</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([<span class="string">b'M_112.jpg'</span>, <span class="string">b'M_113.jpg'</span> ,<span class="string">b'M_114.jpg'</span>])</span><br><span class="line">a = np.append(a,[np.string_(<span class="string">'M_113.jpg'</span>)],<span class="number">0</span>)</span><br><span class="line"><span class="keyword">print</span> (a)</span><br><span class="line"><span class="keyword">print</span> (np.string_(a))</span><br><span class="line"><span class="comment">#np.string_() 字符串转为二进制序列</span></span><br><span class="line"></span><br><span class="line">[<span class="string">b'M_112.jpg'</span> <span class="string">b'M_113.jpg'</span> <span class="string">b'M_114.jpg'</span> <span class="string">b'M_113.jpg'</span>]</span><br><span class="line"><span class="string">b'M_112.jpgM_113.jpgM_114.jpgM_113.jpg'</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([<span class="string">b'M_112.jpg'</span>, <span class="string">b'M_113.jpg'</span> ,<span class="string">b'M_114.jpg'</span>])</span><br><span class="line">a = np.append(a,[<span class="string">'M_113.jpg'</span>],<span class="number">0</span>)</span><br><span class="line"><span class="keyword">print</span> (a)</span><br><span class="line"><span class="keyword">print</span> (np.string_(a))</span><br><span class="line"></span><br><span class="line">[<span class="string">'M_112.jpg'</span> <span class="string">'M_113.jpg'</span> <span class="string">'M_114.jpg'</span> <span class="string">'M_113.jpg'</span>]</span><br><span class="line"><span class="string">b'M\x00\x00\x00_\x00\x00\x001\x00\x00\x001\x00\x00\x002\x00\x00\x00.\x00\x00\x00j\x00\x00\x00p\x00\x00\x00g\x00\x00\x00M\x00\x00\x00_\x00\x00\x001\x00\x00\x001\x00\x00\x003\x00\x00\x00.\x00\x00\x00j\x00\x00\x00p\x00\x00\x00g\x00\x00\x00M\x00\x00\x00_\x00\x00\x001\x00\x00\x001\x00\x00\x004\x00\x00\x00.\x00\x00\x00j\x00\x00\x00p\x00\x00\x00g\x00\x00\x00M\x00\x00\x00_\x00\x00\x001\x00\x00\x001\x00\x00\x003\x00\x00\x00.\x00\x00\x00j\x00\x00\x00p\x00\x00\x00g'</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([<span class="string">b'M_112.jpg'</span>, <span class="string">b'M_113.jpg'</span> ,<span class="string">b'M_114.jpg'</span>])</span><br><span class="line">a = np.append(a,<span class="string">b'M_113.jpg'</span>,<span class="number">0</span>) // a = np.append(a,<span class="string">'M_113.jpg'</span>,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">print</span> (a)</span><br><span class="line"></span><br><span class="line">ValueError: all the input arrays must have same number of dimensions</span><br></pre></td></tr></table></figure><p><strong>字符串前u,r,b是什么意思？</strong></p><p><strong>u例</strong>：u”我是含有中文字符组成的字符串。”</p><p>作用：后面字符串以 Unicode 格式 进行编码，一般用在中文字符串前面，防止因为源码储存格式问题，导致再次使用时出现乱码。</p><p><strong>r例</strong>：r”\n\n\n\n”　　# 表示一个普通生字符串 \n\n\n\n，而不表示换行了。</p><p>作用：去掉反斜杠的转义机制。（特殊字符：即那些，反斜杠加上对应字母，表示对应的特殊含义的，比如最常见的”\n”表示换行，”\t”表示Tab等。 ）</p><p>应用：常用于正则表达式，对应着re模块。</p><p><strong>b例</strong>: response = b’</p><h1>Hello World!</h1>‘   # b’ ‘ 表示这是一个 bytes 对象<p></p><p>作用：b” “前缀表示：后面字符串是bytes 类型。</p><p>用处：网络编程中，服务器和浏览器只认bytes 类型数据。如：<em>send 函数的参数和 recv 函数的返回值都是 bytes 类型</em></p><p><strong>附：</strong></p><p>在 Python3 中，bytes 和 str 的互相转换方式是<br>str.encode(‘utf-8’)<br>bytes.decode(‘utf-8’)</p><p><strong>h5py</strong></p><p> <a href="http://docs.h5py.org/en/stable/high/file.html" target="_blank" rel="noopener">http://docs.h5py.org/en/stable/high/file.html</a> </p><h4 id="3-判断元素是否存在"><a href="#3-判断元素是否存在" class="headerlink" title="3.判断元素是否存在"></a>3.判断元素是否存在</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([<span class="string">b'M_112.jpg'</span>, <span class="string">b'M_113.jpg'</span> ,<span class="string">b'M_114.jpg'</span>])</span><br><span class="line">b = a == [<span class="string">b'M_113.jpg'</span>]</span><br><span class="line">print(b)</span><br><span class="line">print(b.any())  <span class="comment">###any()所有布尔值进行或操作，all()所有布尔值进行与操作</span></span><br><span class="line"></span><br><span class="line">[<span class="literal">False</span>  <span class="literal">True</span> <span class="literal">False</span>]</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><h4 id="4-返回某一元素索引"><a href="#4-返回某一元素索引" class="headerlink" title="4.返回某一元素索引"></a>4.返回某一元素索引</h4><p>np.where() 返回位置索引向量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">b=np.array([<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">4</span>])</span><br><span class="line">a = np.where(b == <span class="number">4</span>)</span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line">(array([<span class="number">0</span>, <span class="number">3</span>], dtype=int64),)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([<span class="string">b'M_112.jpg'</span>, <span class="string">b'M_113.jpg'</span> ,<span class="string">b'M_114.jpg'</span>])</span><br><span class="line">b = np.where(a == [<span class="string">b'M_113.jpg'</span>] )</span><br><span class="line">print(b)</span><br><span class="line">print(a[b])</span><br><span class="line"></span><br><span class="line">(array([<span class="number">1</span>], dtype=int64),)</span><br><span class="line">[<span class="string">b'M_113.jpg'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a=np.array([<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">4</span>])</span><br><span class="line">b = np.where(a == <span class="number">7</span>)</span><br><span class="line">print(b)</span><br><span class="line">print(a[b])</span><br><span class="line"></span><br><span class="line">(array([], dtype=int64),)</span><br><span class="line">[]</span><br></pre></td></tr></table></figure><h4 id="5-删除二维矩阵某一行元素"><a href="#5-删除二维矩阵某一行元素" class="headerlink" title="5.删除二维矩阵某一行元素"></a>5.删除二维矩阵某一行元素</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line">a = np.delete(a,[<span class="number">0</span>,<span class="number">1</span>],<span class="number">0</span>)</span><br><span class="line">a = np.delete(a,[<span class="number">1</span>],<span class="number">0</span>)</span><br><span class="line">a = np.delete(a,<span class="number">1</span>,<span class="number">0</span>)</span><br><span class="line">[<span class="number">0</span>,<span class="number">1</span>] 表示哪几行，<span class="number">0</span>表示删除行，<span class="number">1</span>表示删除列，axis=<span class="number">0</span>/<span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="6-numpy中形状的改变"><a href="#6-numpy中形状的改变" class="headerlink" title="6.numpy中形状的改变"></a>6.numpy中形状的改变</h4><p><strong>resize与reshape</strong></p><p> 两个函数都是改变数组的形状，但是resize是在本身上进行操作，reshape返回的是修改之后的参数 </p><ul><li><p>reshape：有返回值，所谓有返回值，即不对原始多维数组进行修改；</p></li><li><p>resize：无返回值，所谓无返回值，即会对原始多维数组进行修改；</p><p><strong>ravel与flatten</strong></p><p>flatten不会影响原始矩阵，返回的是一个副本，但是ravel是会修改数组 </p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = np.array([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = x.flatten()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">1</span>] = <span class="number">100</span></span><br><span class="line">&gt;&gt;&gt;&gt; a</span><br><span class="line">array([  <span class="number">1</span>, <span class="number">100</span>,   <span class="number">3</span>,   <span class="number">4</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line">array([[<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">       [<span class="number">3</span>, <span class="number">4</span>]]) </span><br><span class="line"><span class="comment">## flatten函数返回的是拷贝,修改返回的a之后原始的x并未改变。</span></span><br><span class="line"><span class="comment">## 1. .reshape可以实现维度的提升</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = np.array([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = x.ravel()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">1</span>] = <span class="number">100</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">array([  <span class="number">1</span>, <span class="number">100</span>,   <span class="number">3</span>,   <span class="number">4</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line">array([[  <span class="number">1</span>, <span class="number">100</span>],</span><br><span class="line">       [  <span class="number">3</span>,   <span class="number">4</span>]])  </span><br><span class="line"><span class="comment">### a是由x降维得到的，对a修改会影响到x</span></span><br><span class="line"><span class="comment">### ravel返回的是视图(参考数据库中的视图进行理解)，修改a之后x的内容会发生改变。不过注意a已经变为一维的了，x还是二维的，a只是将x的数据以不同的方式进行呈现。</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;中&lt;strong&gt;numpy&lt;/strong&gt;模块学习记录&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="numpy" scheme="http://yoursite.com/tags/numpy/"/>
    
  </entry>
  
  <entry>
    <title>opencv</title>
    <link href="http://yoursite.com/2019/12/15/opencv/"/>
    <id>http://yoursite.com/2019/12/15/opencv/</id>
    <published>2019-12-14T16:00:00.000Z</published>
    <updated>2019-12-15T13:10:26.762Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Python</strong>中<strong>opencv</strong>模块学习记录</p><a id="more"></a><h3 id="OpenCV"><a href="#OpenCV" class="headerlink" title="OpenCV"></a>OpenCV</h3><h4 id="1-视频"><a href="#1-视频" class="headerlink" title="1.视频"></a>1.视频</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line">cap = cv.VideoCapture(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> cap.isOpened():</span><br><span class="line">    print(<span class="string">"Cannot open camera"</span>)</span><br><span class="line">    exit()</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># Capture frame-by-frame</span></span><br><span class="line">    ret, frame = cap.read()</span><br><span class="line">    <span class="comment"># if frame is read correctly ret is True</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> ret:</span><br><span class="line">        print(<span class="string">"Can't receive frame (stream end?). Exiting ..."</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># Our operations on the frame come here</span></span><br><span class="line">    gray = cv.cvtColor(frame, cv.COLOR_BGR2GRAY)</span><br><span class="line">    <span class="comment"># Display the resulting frame</span></span><br><span class="line">    cv.imshow(<span class="string">'frame'</span>, gray)</span><br><span class="line">    <span class="keyword">if</span> cv.waitKey(<span class="number">1</span>) == ord(<span class="string">'q'</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="comment"># When everything done, release the capture</span></span><br><span class="line">cap.release()</span><br><span class="line">cv.destroyAllWindows()</span><br></pre></td></tr></table></figure><p> <a href="https://docs.opencv.org/3.4/dd/d43/tutorial_py_video_display.html" target="_blank" rel="noopener">https://docs.opencv.org/3.4/dd/d43/tutorial_py_video_display.html</a> (<strong>video capture介绍</strong>)</p><p> You can also access some of the features of this video using <strong>cap.get(propId)</strong> method where propId is a number from 0 to 18. Each number denotes a property of the video (if it is applicable to that video). Full details can be seen here: <a href="https://docs.opencv.org/3.4/d8/dfe/classcv_1_1VideoCapture.html#aa6480e6972ef4c00d74814ec841a2939" target="_blank" rel="noopener">cv::VideoCapture::get()</a>. Some of these values can be modified using <strong>cap.set(propId, value)</strong>. Value is the new value you want. </p><p> <a href="https://docs.opencv.org/3.4/d4/d15/group__videoio__flags__base.html#gaeb8dd9c89c10a5c63c139bf7c4f5704d" target="_blank" rel="noopener">https://docs.opencv.org/3.4/d4/d15/group__videoio__flags__base.html#gaeb8dd9c89c10a5c63c139bf7c4f5704d</a> (<strong>get、set 参数详情</strong>)</p><table><thead><tr><th>get()</th><th></th></tr></thead><tbody><tr><td>CAP_PROP_POS_FRAMES<br>Python: cv.CAP_PROP_POS_FRAMES</td><td>0-based index of the frame to be decoded/captured next.<strong>1</strong></td></tr><tr><td>CAP_PROP_FRAME_WIDTH Python: cv.CAP_PROP_FRAME_WIDTH</td><td>Width of the frames in the video stream.<strong>3</strong></td></tr><tr><td>CAP_PROP_FRAME_HEIGHT Python: cv.CAP_PROP_FRAME_HEIGHT</td><td>Height of the frames in the video stream.<strong>4</strong></td></tr><tr><td>CAP_PROP_FPS Python: cv.CAP_PROP_FPS</td><td>Frame rate.<strong>5</strong></td></tr></tbody></table><h4 id="2-opencv-imread"><a href="#2-opencv-imread" class="headerlink" title="2. opencv imread"></a>2. opencv imread</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cv2.imread(<span class="string">'path'</span>).shape[<span class="number">0</span>]  <span class="comment">#height</span></span><br><span class="line">cv2.imread(<span class="string">'path'</span>).shape[<span class="number">1</span>]  <span class="comment">#width</span></span><br></pre></td></tr></table></figure><h4 id="3-opencv-resize"><a href="#3-opencv-resize" class="headerlink" title="3.opencv resize"></a>3.opencv resize</h4><p>函数原型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`cv2.resize(src, dsize[, dst[, fx[, fy[, interpolation]]]])`</span><br></pre></td></tr></table></figure><p>参数：</p><p><strong>src</strong>：要resize的原图，应该是一个矩阵</p><p><strong>size：</strong>希望得到图像的shape，<strong>是一个tuple类型的数据，注意，这里是宽*高，而我们平常img.shpae得到都是高*宽</strong></p><p><strong>fx</strong>，<strong>fy</strong> 一般不会用到</p><p><strong>interpolation：</strong> 插值方法</p><p>其中插值方式有很多种：</p><p><strong>INTER_NEAREST</strong>        最近邻插值<br><strong>INTER_LINEAR</strong>        双线性插值（默认设置）<br><strong>INTER_AREA **      使用像素区域关系进行重采样。 它可能是图像抽取的首选方法，因为它会产生无云纹理的结果。 但是当图像缩放时，它类似于INTER_NEAREST方法。<br>**INTER_CUBIC</strong>     4x4像素邻域的双三次插值<br><strong>INTER_LANCZOS4</strong>    8x8像素邻域的Lanczos插值</p><p>通常的，缩小使用cv.INTER_AREA，放缩使用cv.INTER_CUBIC(较慢)和cv.INTER_LINEAR(较快效果也不错)。默认情况下，所有的放缩都使用cv.INTER_LINEAR。</p><p>另外，一个小tips ，opencv 的imread 读图读出来应该是 BGR 模式 如果需要保存应该转成 RGB，下面这句代码就可以了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img = img [:,:,::<span class="number">-1</span>]  <span class="comment">#所有行，所有列，所有竖（步长为-1）</span></span><br></pre></td></tr></table></figure><p>还有 注意 opencv 的resize 后矩阵的数据类型仍然应该是uint8，但是 在skimage.transform.resize() 里 返回的是 [0,1] 的矩阵，数据类型变为了 float 。</p><p>跑模型时，经常会遇到自己数据的size和原模型的size不一致，这时候可能需要自己resize，但尤其要注意：</p><p>原来imread读出来的矩阵的数据类型是uint8，而resize后的数据类型是float，这是(0，1)范围内的数，所以如果以后要转回uint8的话肯定会丢失精度，所以我的做法是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">image = (resize(image, (<span class="number">128</span>, <span class="number">64</span>)) * <span class="number">255</span>).astype(np.uint8)  <span class="comment">#resize为skimage的</span></span><br></pre></td></tr></table></figure><p>强转为uint8</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;中&lt;strong&gt;opencv&lt;/strong&gt;模块学习记录&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="opencv" scheme="http://yoursite.com/tags/opencv/"/>
    
  </entry>
  
  <entry>
    <title>tkinter</title>
    <link href="http://yoursite.com/2019/12/15/tkinter/"/>
    <id>http://yoursite.com/2019/12/15/tkinter/</id>
    <published>2019-12-14T16:00:00.000Z</published>
    <updated>2019-12-15T13:12:18.266Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Python</strong>中<strong>tkinter</strong>模块学习记录</p><a id="more"></a><p>tkinter 大事记</p><p>tkinter用法及在Python2.X和Python3.X中的不同</p><p><strong>一.导入方式：</strong><br>　　Python2.x:</p><p>　　　　from Tkinter import *</p><p>　　Python3.x:</p><p>　　　　from tkinter import *</p><p><strong>二.打开文件框：</strong><br>　　Python2.X：</p><p>　　　　import tkFileDialog</p><p>　　　　filename = tkFileDialog.askopenfilename(filetypes=[(“bmp格式”.decode(‘gbk’),”bmp”)])</p><p>　　　　#注意：Python2.X会有中文乱码问题，需要在”中文”后加.decode(‘gbk’) 。Python3.X则不需要</p><p>　　　　这里可以加入属性： initialdir 设置默认初始路径。即：</p><p>　　　　FileName = tkFileDialog.askopenfilename(filetypes=[(“bmp格式”.decode(‘gbk’),”bmp”)], initialdir = ‘E:’)</p><p>　　Python3.X：</p><p>　　　　import tkinter.filedialog</p><p>　　　　filename=tkinter.filedialog.askopenfilename(filetypes=[(“bmp格式”,”bmp”)])</p><p><strong>三.对话框：</strong><br>　　Python2.X：</p><p>　　　　import tkFileDialog</p><p>　　　　tkinter.MessageBox.showinfo(title=’中文标题’.decode(‘gbk’), message=’XXX’) #注意:中文要加.decode(‘gbk’)</p><p>　　Python3.X：</p><p>　　　　import tkinter.messagebox</p><p>　　　　tkinter.messagebox.showinfo(title=’XXX’,message=’XXX’)</p><p><strong>四.下拉列表：</strong><br>　　Python2.X：</p><p>　　　　import ttk</p><p>　　　　#注意：如果写from ttk import * 会影响Label的属性，这里可能Label会自动调用ttk里的Label？猜测而已</p><p>　　Python3.X：</p><p>　　　　from tkinter import ttk</p><p>　　　　用法一样：</p><p>　　　　　　myComboList = [‘AAA’,’BBB’,]</p><p>　　　　　　myCombox = ttk.Combobox(root, values=myComboList )</p><p>　　　　　　myCombox .pack()</p><p>mac 下 python3 应用tkinter 有点问题</p><p>通过python2解决</p><p>通过brew管理Python环境</p><p>brew install python2</p><p>brew install python3</p><p>pip 对应 python2 pip3 对应python3</p><p>Linux 下，</p><p>sudo apt-get install python3-tk</p><p>即可python3+tkinter正常使用</p><p>csv -&gt; unicodecsv(没有newline属性)</p><p>filename重排序</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;中&lt;strong&gt;tkinter&lt;/strong&gt;模块学习记录&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="tkinter" scheme="http://yoursite.com/tags/tkinter/"/>
    
  </entry>
  
  <entry>
    <title>vscode ssh</title>
    <link href="http://yoursite.com/2019/12/15/vscode_ssh/"/>
    <id>http://yoursite.com/2019/12/15/vscode_ssh/</id>
    <published>2019-12-14T16:00:00.000Z</published>
    <updated>2019-12-15T13:40:19.430Z</updated>
    
    <content type="html"><![CDATA[<p><strong>vscode</strong> 配置<strong>ssh</strong></p><a id="more"></a><h4 id="vscode-ssh"><a href="#vscode-ssh" class="headerlink" title="vscode ssh"></a>vscode ssh</h4><h4 id="1-下载插件"><a href="#1-下载插件" class="headerlink" title="1.下载插件"></a>1.下载插件</h4><p><img src="/2019/12/15/vscode_ssh/image-20191211214809208.png" alt="image-20191211214809208"></p><h4 id="2-相应设置"><a href="#2-相应设置" class="headerlink" title="2.相应设置"></a>2.相应设置</h4><p> Remote-SSH:Settings，设置Remote.SSH:Show Login Terminal为true </p><h4 id="3-连接"><a href="#3-连接" class="headerlink" title="3.连接"></a>3.连接</h4><p><img src="/2019/12/15/vscode_ssh/image-20191211214937667.png" alt="image-20191211214937667"></p><p>点击齿轮</p><p><img src="/2019/12/15/vscode_ssh/image-20191211215010706.png" alt="image-20191211215010706"></p><p>选第一个</p><p><img src="/2019/12/15/vscode_ssh/image-20191211215044636.png" alt="image-20191211215044636"></p><p>修改hostname 和 user 并保存</p><p><img src="/2019/12/15/vscode_ssh/image-20191211215145528.png" alt="image-20191211215145528"></p><p>右键连接。</p><p>输入密码登录</p><p>打开新的终端 就是 bash</p><p>左侧可以查看服务器目录</p><p>可以下载文件</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;vscode&lt;/strong&gt; 配置&lt;strong&gt;ssh&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="vscode" scheme="http://yoursite.com/categories/vscode/"/>
    
    
      <category term="ssh" scheme="http://yoursite.com/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>电脑实用工具</title>
    <link href="http://yoursite.com/2019/12/15/%E7%94%B5%E8%84%91%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    <id>http://yoursite.com/2019/12/15/电脑实用工具/</id>
    <published>2019-12-14T16:00:00.000Z</published>
    <updated>2019-12-15T13:19:30.961Z</updated>
    
    <content type="html"><![CDATA[<p>记录一些电脑实用软件</p><a id="more"></a><h3 id="电脑实用工具"><a href="#电脑实用工具" class="headerlink" title="电脑实用工具"></a>电脑实用工具</h3><h4 id="0-Google-Chrome"><a href="#0-Google-Chrome" class="headerlink" title="0.Google Chrome"></a>0.Google Chrome</h4><p> <a href="https://www.google.cn/intl/zh-CN/chrome/" target="_blank" rel="noopener">https://www.google.cn/intl/zh-CN/chrome/</a> </p><p>基本需求：</p><p>各种插件（ <a href="https://www.extfans.com/" target="_blank" rel="noopener">https://www.extfans.com/</a> 可以下载插件，无需翻墙），常用的有：</p><p>1.新标签页，可以方便的查看书签、历史记录，方便的添加网址到主页以便访问。</p><img src="/2019/12/15/电脑实用工具/image-20191206205536657.png" alt="image-20191206205536657" style="zoom:67%;"><p>2.划词翻译</p><img src="/2019/12/15/电脑实用工具/image-20191206205258631.png" alt="image-20191206205258631" style="zoom: 67%;"><p>3.油猴</p><img src="/2019/12/15/电脑实用工具/image-20191206205412829.png" alt="image-20191206205412829" style="zoom:67%;"><p>4.adblock plus</p><img src="/2019/12/15/电脑实用工具/image-20191206205501628.png" alt="image-20191206205501628" style="zoom:67%;"><p>5.zotero connector</p><img src="/2019/12/15/电脑实用工具/image-20191206205656725.png" alt="image-20191206205656725" style="zoom:67%;"><h4 id="1-potplayer"><a href="#1-potplayer" class="headerlink" title="1.potplayer"></a>1.potplayer</h4><p> <a href="https://potplayer.en.softonic.com/" target="_blank" rel="noopener">https://potplayer.en.softonic.com/</a> </p><h4 id="2-vscode"><a href="#2-vscode" class="headerlink" title="2.vscode"></a>2.vscode</h4><p> <a href="https://code.visualstudio.com/Download" target="_blank" rel="noopener">https://code.visualstudio.com/Download</a> </p><p>相关插件：</p><img src="/2019/12/15/电脑实用工具/image-20191206210440785.png" alt="image-20191206210440785" style="zoom:67%;"><p>补充：</p><h4 id="3-typora——写markdown用"><a href="#3-typora——写markdown用" class="headerlink" title="3.typora——写markdown用"></a>3.typora——写markdown用</h4><p> <a href="https://www.typora.io/#windows" target="_blank" rel="noopener">https://www.typora.io/#windows</a> </p><h4 id="4-Git"><a href="#4-Git" class="headerlink" title="4.Git"></a>4.Git</h4><p> <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a> </p><p>内容很多，主要是连<strong>github</strong>    要具体……….</p><h4 id="5-mathpix"><a href="#5-mathpix" class="headerlink" title="5.mathpix"></a>5.mathpix</h4><p> <a href="https://mathpix.com/" target="_blank" rel="noopener">https://mathpix.com/</a> </p><p>截图数学公式，转换为LaTeX/Markdown可用的形式</p><p> <a href="https://stackedit.io/editor?tdsourcetag=s_pcqq_aiomsg" target="_blank" rel="noopener">https://stackedit.io/editor?tdsourcetag=s_pcqq_aiomsg</a>  结合这个写word公式</p><h4 id="6-zotero"><a href="#6-zotero" class="headerlink" title="6.zotero"></a>6.zotero</h4><p> <a href="https://www.zotero.org/download/" target="_blank" rel="noopener">https://www.zotero.org/download/</a> </p><p>管理自己的参考文献<br>提供浏览器插件，轻松点击即可下载相关文献，易于管理<br>提供word插件，轻松引用，并且可以输出各种主流格式的参考文献。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录一些电脑实用软件&lt;/p&gt;
    
    </summary>
    
      <category term="电脑软件" scheme="http://yoursite.com/categories/%E7%94%B5%E8%84%91%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>change computer</title>
    <link href="http://yoursite.com/2019/06/26/change-computer/"/>
    <id>http://yoursite.com/2019/06/26/change-computer/</id>
    <published>2019-06-26T06:23:14.000Z</published>
    <updated>2019-06-26T06:49:17.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用HEXO，换电脑了怎么办？"><a href="#使用HEXO，换电脑了怎么办？" class="headerlink" title="使用HEXO，换电脑了怎么办？"></a>使用HEXO，换电脑了怎么办？</h2><p>这个时候你的ubuntu上什么都没有。。。</p><p>1.安装nvm（为了装更高版本的node）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash</span><br></pre></td></tr></table></figure><p>验证：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm --version</span><br></pre></td></tr></table></figure><p>2.安装更高版本node</p><p>查看可用node版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm ls-remote</span><br></pre></td></tr></table></figure><p>安装最新版本node</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install v12.4.0</span><br></pre></td></tr></table></figure><p>3.安装npm</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure><p>验证</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>4.安装hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir hexo</span><br><span class="line">cd hexo</span><br><span class="line">sudo npm install -g hexo-cli</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-category --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-deployer-heroku --save</span><br><span class="line">npm install hexo-deployer-rsync --save</span><br><span class="line">npm install hexo-deployer-openshift --save</span><br><span class="line">npm install hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-stylus --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>5.配置git</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email "you@example.com"</span><br><span class="line">git config --global user.name "Your Name"</span><br><span class="line">ssh-keygen -t rsa -C example@example.com</span><br><span class="line">less ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>最后一句话执行之后 内容需要copy</p><p>登录github</p><p>右上角-&gt;setting-&gt;SSH and GPG keys-&gt;new SSH key</p><p>tiitle随意，Key 粘贴上边的内容</p><p>6.旧的文件转移</p><p>以下文件夹需要在新电脑删除，之后将原来的文件copy过来</p><p>站点配置：_config.yml</p><p>主题文件夹：theme</p><p>博客文件夹：source</p><p>以及：scaffolds文件夹，package.json，.gitignore（这个没有也无所谓）</p><p>7.顺利地话，应该可以啦</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>就可以啦！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;使用HEXO，换电脑了怎么办？&quot;&gt;&lt;a href=&quot;#使用HEXO，换电脑了怎么办？&quot; class=&quot;headerlink&quot; title=&quot;使用HEXO，换电脑了怎么办？&quot;&gt;&lt;/a&gt;使用HEXO，换电脑了怎么办？&lt;/h2&gt;&lt;p&gt;这个时候你的ubuntu上什么都没有
      
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>移动气象站</title>
    <link href="http://yoursite.com/2019/06/11/%E7%A7%BB%E5%8A%A8%E6%B0%94%E8%B1%A1%E7%AB%99/"/>
    <id>http://yoursite.com/2019/06/11/移动气象站/</id>
    <published>2019-06-11T08:51:45.000Z</published>
    <updated>2019-12-15T12:50:09.389Z</updated>
    
    <content type="html"><![CDATA[<p>这是报告《移动气象站》的摘要</p><a id="more"></a><p>移动气象站</p><p><img src="/2019/06/11/移动气象站/1558158962093.png" alt="1558158962093"></p><p><strong>我们写期末报告大概要写这些</strong></p><h3 id="1-总体构思"><a href="#1-总体构思" class="headerlink" title="1.总体构思"></a>1.总体构思</h3><p><img src="/2019/06/11/移动气象站/1558159947380.png" alt="1558159947380"></p><h3 id="2-单片机选型"><a href="#2-单片机选型" class="headerlink" title="2.单片机选型"></a>2.单片机选型</h3><h4 id="2-1-Arduino-Nano简介"><a href="#2-1-Arduino-Nano简介" class="headerlink" title="2.1 Arduino Nano简介"></a>2.1 Arduino Nano简介</h4><p>Arduino Nano 是一款小巧的，完成可以使用在面包板的CPU，ATmega328P产品。提供与UNO板子一样的外部连接特性，并且也具有外部的插脚接口。UNO是一个意大利语，是一的意思，即Arduino UNO是Arduino的第一个控制板子。Arduino Nano字面翻译Nano是侏儒的意思，即是一个个头很小的板子。Arduino Nano是一款基于ATmega328P的小型，完整且面包板友好型电路板;以较小的外形提供UNO板的相同连接和规格。</p><p>可以使用Arduino的编程软件（IDE）来为Arduino Nano编程，这个合成的开发环境具有和其他产品相当的特性，可以对板子进行在线或离线编程。</p><h4 id="2-2-Arduino-Nano技术参数"><a href="#2-2-Arduino-Nano技术参数" class="headerlink" title="2.2 Arduino Nano技术参数"></a>2.2 Arduino Nano技术参数</h4><p><img src="/2019/06/11/移动气象站/Arduino_Nano%E4%B8%BB%E8%A6%81%E6%8A%80%E6%9C%AF%E5%8F%82%E6%95%B0.png" alt="Arduino_Nano主要技术参数"></p><h4 id="2-3-Arduino-Nano引脚图"><a href="#2-3-Arduino-Nano引脚图" class="headerlink" title="2.3 Arduino Nano引脚图"></a>2.3 Arduino Nano引脚图</h4><p><img src="/2019/06/11/移动气象站/Arduino-nano%E5%BC%95%E8%84%9A%E8%AF%B4%E6%98%8E-1558177504021.jpg" alt="Arduino-nano引脚说明"></p><p><a href="https://blog.csdn.net/sdlgq/article/details/57074744" target="_blank" rel="noopener">引脚分配注意事项</a>：</p><ul><li>0、1为Rx、Tx 针脚，这两个针脚一般作为串口使用，非串口设备尽量不占用该针脚。</li><li>2、3为中断口，分别对应中断0、中断1，需要中断功能的设备，必须接入此。</li><li>2～13、A0～A5，共18个针脚，都可以作为数字针脚，编号连起来，分别是2～19。</li><li>13针脚只能为OUTPUT模式，只能作为输出端，不能用作输入端。</li><li>A6、A7针脚只能用做模拟信号，不能用作数字信号。</li><li>一般情况下，除了0、1、13、A6、A7这几个针脚比较特殊外，其他的针脚都可以按照正常功能使用。也就是说，2～12、A0～A5这17个针脚，基本可以放心使用。</li></ul><h4 id="2-4-选择原因"><a href="#2-4-选择原因" class="headerlink" title="2.4 选择原因"></a>2.4 选择原因</h4><p>功耗低，每个引脚的直流电流为40mA。符合本次设计的低功耗要求。</p><p>体积小巧，相当于紧凑版的Arduino UNO，但功能齐全。它有22个数字I/O引脚，满足本次设计的需求，又不会显得太“大材小用”。</p><p>价格比较便宜，从而提升了本次设计的性价比。</p><p>社区活跃，相比于其他单片机和MCU，Arduino用户数量较多，并且开发环境简洁，IDE十分便于上手，操作方便,代码资源丰富。</p><h3 id="3-传感器选型"><a href="#3-传感器选型" class="headerlink" title="3.传感器选型"></a>3.传感器选型</h3><h4 id="3-1温湿度传感器"><a href="#3-1温湿度传感器" class="headerlink" title="3.1温湿度传感器"></a>3.1温湿度传感器</h4><p><strong>DHT11</strong></p><p><img src="/2019/06/11/移动气象站/1558184336321.png" alt="1558184336321"></p><p>DHT11是一款有已校准数字信号输出的温湿度传感器。 其精度湿度+-5%RH， 温度+-2℃，量程湿度20-90%RH， 温度0~50℃。</p><p>其特性如下：</p><p>相对湿度和温度测量，全部校准，数字输出，卓越的长期稳定性，无需额外部件，超长的信号传输距离，超低能耗</p><p>接线方式：</p><p><img src="/2019/06/11/移动气象站/d50735fae6cd7b892f8a3c200f2442a7d8330eaa.jpg" alt="img"></p><p><strong>DHT11模块</strong></p><p><img src="/2019/06/11/移动气象站/timg.jpeg" alt="timg"></p><p>即为DHT11的封装版本，数据端口带上拉电阻，可直接连入单片机使用：</p><ul><li><p>VCC   → 3.3V/5V电源正极</p></li><li><p>GND   →电源负极</p></li><li><p>DATA  →单片机IO口</p></li></ul><h4 id="3-2-紫外线传感器"><a href="#3-2-紫外线传感器" class="headerlink" title="3.2 紫外线传感器"></a>3.2 紫外线传感器</h4><p><strong>GYML8511</strong></p><p><img src="/2019/06/11/移动气象站/ML8511-1.JPG" alt="ML8511-1"></p><p>该模块采用了通用的ML8511 UV传感器原件，可以用来检测室内或室外的紫外线密度。通过将光电流转化成电压的原理来检测UV强度，非常适合被被外部电路所采用。 ML8511可与UV光量成正比输出模拟电压（如下图）。由于可以输出电压，因此可以直接连接内建MCU的A/D数字/模拟转换器，无需光电转换电路。而且使用小型、薄型表面封装方式，适合于便携式设备用途。该模快还具备省电模式可达0.1uA，适合在智能可穿戴和手机等设备上使用。</p><p><img src="/2019/06/11/移动气象站/1558229417061.png" alt="1558229417061"></p><p>连接方式：</p><p>VIN -&gt; 5V<br>OUT -&gt; A0<br>GND -&gt; GND<br>EN -&gt; 3.3V<br>3.3V -&gt; A1</p><h4 id="3-3-PM2-5传感器"><a href="#3-3-PM2-5传感器" class="headerlink" title="3.3 PM2.5传感器"></a>3.3 PM2.5传感器</h4><p><strong>GP2Y1014AU粉尘传感器</strong></p><p><img src="/2019/06/11/移动气象站/1558185606031.png" alt="1558185606031"></p><p>该传感器用于检测空气中的细小颗粒，例如香烟烟雾；该装置包含一个红外发光二极管和一个光电晶体管，对角放置，用于检测空气中的反射光；该传感器具有很低的电流消耗（最大20mA，典型值为11mA），允许最大输入电压7VDC；输出的是一个正比于粉尘浓度（在一定区间内）的模拟电压，如下图，敏感度为0.5V/0.1mg/m^3</p><p><img src="/2019/06/11/移动气象站/1558186643486.png" alt="1558186643486"></p><p>原理图：</p><p><img src="/2019/06/11/移动气象站/1558185841710.png" alt="1558185841710"></p><p>连接方式：</p><p>V-LED -&gt; 5V(150Ω resistor)</p><p>LED-GND -&gt; GND</p><p>LED -&gt; a Digital Pin</p><p>S-GND -&gt; GND</p><p>Vo -&gt; an Analog Pin</p><p>Vcc -&gt;5V</p><p>并且V-LED和LED-GND之间要添加220uF电解电容</p><p><img src="/2019/06/11/移动气象站/1558185891132.png" alt="1558185891132"></p><h4 id="3-4-GPS传感器"><a href="#3-4-GPS传感器" class="headerlink" title="3.4 GPS传感器"></a>3.4 GPS传感器</h4><p><strong>U-BLOX NEO-6M模组</strong></p><p><img src="/2019/06/11/移动气象站/1558187612642.png" alt="1558187612642"></p><p>模组特性：</p><p>1, 模块采用U-BLOX NEO-6M模组,体积小巧,性能优异。                                              2, 模块增加放大电路,有利于无源陶瓷天线快速搜星。<br>3, 模块可通过串口进行各种参数设置,并可保存在EEPROM,使用方便。<br>4, 模块自带SMA接口,可以连接各种有源天线,适应能力强。带有IPEX接口,可以接有源陶瓷天线。<br>5, 模块兼容3.3V/5V电平,方便连接各种单片机系统。<br>6, 模块自带可充电后备电池,可以掉电保持星历数据。</p><p>引脚说明：</p><table><thead><tr><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">VCC</td><td align="center">电源(3.3V~5.0V)</td></tr><tr><td align="center">GND</td><td align="center">地</td></tr><tr><td align="center">TXD</td><td align="center">模块串口发送脚,可接单片机的RXD</td></tr><tr><td align="center">RXD</td><td align="center">模块串口接收脚,可接单片机的TXD</td></tr><tr><td align="center">PPS</td><td align="center">时钟脉冲输出脚</td></tr></tbody></table><p>其中,PPS引脚同时连接到了模块自带了的状态指示灯:</p><p>1, 常亮,表示模块已开始工作,但还未实现定位。<br>2, 闪烁(100ms灭,900ms亮),表示模块已经定位成功。</p><p>连接单片机：</p><p>VCC———————————– VCC(必须接)<br>GND———————————-GND(必须接)<br>TXD———————————–RXD(必须接)<br>RXD———————————–TXD(可不接)<br>PPS———————————–某个 IO(可不接)</p><p>具体操作：</p><p>该模组的串口返回数据均为NMEA语句，NMEA全称美国国家海洋电子协会（National Marine Electronics Association），在GPS领域，它是GPS制造商支持的标准数据格式。NMEA语句以$字符开头，每个数据字段用逗号分隔。消息的类型由第一个逗号前的字符指示。</p><p>由于自己解析NMEA数据代码量比较大，且容易忽略很多细节，为代码维护带来一定困难，所以选择使用TinyGPS ++库解析NMEA语句，这个库使得我们可以以一种有用和容易理解的格式获得位置信息变得简单。并且该模组使用一组串口传递信息，而Arduino Nano只有一组串口（硬串口），考虑到接下来的通信模组也需要一组串口，因此，GPS模组应用Arduino自带的软串口库来自定义一组软串口。</p><p>首先需要导入所需的库：TinyGPSPlus和SoftwareSerial：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;TinyGPS++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SoftwareSerial.h&gt;</span></span></span><br></pre></td></tr></table></figure><p>申请一组I/O作为软串口：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> RXPin = <span class="number">4</span>, TXPin = <span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>创建一个TinyGPS ++对象，并在之前定义的引脚启动串行连接：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TinyGPSPlus GPS;</span><br><span class="line">SoftwareSerial ss（RXPin，TXPin）;</span><br></pre></td></tr></table></figure><p>这之后获取纬度和经度很简单，分别使用gps.location.lat（）和gps.location.lng（）。同时也可以获取时间（年月日、时分秒）等其他信息。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gps.date.year()</span><br><span class="line">gps.date.month()</span><br><span class="line">gps.date.day()</span><br><span class="line">gps.time.hour()</span><br><span class="line">gps.time.minute()</span><br><span class="line">gps.time.second()</span><br></pre></td></tr></table></figure><h3 id="4-通信模组选型"><a href="#4-通信模组选型" class="headerlink" title="4.通信模组选型"></a>4.通信模组选型</h3><p><strong>YNH-M5310A核心板</strong></p><p><img src="/2019/06/11/移动气象站/1558194529201.png" alt="1558194529201"></p><p>YNH-M5310A核心板基于中移物联NBIOT M5310A全网通模块，该模块支持电信、移动、联通网络，支持TCP/UDP/MQTT/NOENET等协议，是目前市占率非常高的一款模组。</p><p>M5310A全网通模块</p><p><img src="/2019/06/11/移动气象站/1558230094866.png" alt="1558230094866"></p><p>M5310-A 模块是一款工业级的多频段 NB-IOT 无线模块,其工作频段是 Band3、 Band 5、 Band 8。它主要应用于低功耗的数据传输业务,满足 3gpp Release14 标准。M5310-A 模块采用了低功耗技术,电流功耗在 PSM 模式下低至 3 uA。NB-IOT 主要用到两种节电技术,分别是 PSM ( Power Saving Mode)和 eDRX(Extended DRX)。<br>模块在 PSM 下的最大耗流为 5uA。 PSM 主要目的是降低模块功耗,延长电池的供电时间。下图显示了模块在不同模式下的功耗。</p><p><img src="/2019/06/11/移动气象站/1558230347837.png" alt="1558230347837"></p><p>eDRX (增强型不连续接收)技术,是通过延长 DRX 的时间,减少了终端的 DRX 次数和频率,从而达到节电的目的。节电效果相比 PSM 要差些,但相对于 PSM, eDRX 提高了下行通信链路的可到达性,较为适合保持长连接等的应用。</p><p>M5310-A 模块可以工作在三个频段之下，正是它全网通的原因。</p><table><thead><tr><th align="center">频带</th><th align="center">接收频率</th><th align="center">发射频率</th></tr></thead><tbody><tr><td align="center">Band8</td><td align="center">925~960MHz</td><td align="center">880~915MHz</td></tr><tr><td align="center">Band5</td><td align="center">865~894MHz</td><td align="center">824~849MHz</td></tr><tr><td align="center">Band3</td><td align="center">1805~1880MHZ</td><td align="center">1710~1785MHZ</td></tr></tbody></table><p>由于已经有厂家将该模块进行封装成为核心板，因此只要分析核心板的引脚和使用方式即可。</p><p>核心板引脚说明：</p><table><thead><tr><th align="center">管脚</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">DTX</td><td align="center">NB模块DEBUG UART接收</td></tr><tr><td align="center">RI</td><td align="center">信息上报时输出低电平，输出完成恢复高电平，可悬空</td></tr><tr><td align="center">RX</td><td align="center">模块接收端，接Arduino TX发送引脚</td></tr><tr><td align="center">TX</td><td align="center">模块发送端，接Arduino RX接收引脚</td></tr><tr><td align="center">EN</td><td align="center">拉低可以关闭整个模块电源，不用可悬空</td></tr><tr><td align="center">RST</td><td align="center">模块复位管脚，拉高硬件复位，不用则悬空</td></tr><tr><td align="center">VCC</td><td align="center">电源输入，3.3V/5V</td></tr><tr><td align="center">GND</td><td align="center">电源接地</td></tr></tbody></table><p>核心板测试：</p><p>使用USB转TTL工具对模块进行简单测试，串口工具的TX、RX、VCC、GND分别接模块的RX、TX、VCC、GND，使用串口调试工具发送AT指令即可实现简单的测试。</p><p><img src="/2019/06/11/移动气象站/1558194570589.png" alt="1558194570589"></p><p>A. AT<br>模块回 OK,表示正常<br>B. AT+NBAND?<br>获取模块支持的频段,模块回“+NBAND:5,8”,表示支持 B5 /B8 频段,其中 B5 是电信的,B8 是移动的频段,模块也支持其他频段<br>C. AT+CSQ<br>获取 NBIOT 信号强度,模块回“+CSQ:23,99”,前面一个十进制数表示信号前度,一般情况下要求高于 16（99表示没信号）,否则存在通信失败的情况。<br>D. AT+CEREG?<br>检查模块是否注网成功,模块回“+CEREG:0,1”表示注网成功,如果模块断电冷启动,可能刚刚开始需要一些时间进行注网<br>E. AT+CIMI<br>获取 SIM 卡的 CIMI 号,模块回 15 字节数据<br>F. AT+CGSN=1<br>获取设备的唯一标识码</p><h3 id="5-云平台选择"><a href="#5-云平台选择" class="headerlink" title="5.云平台选择"></a>5.云平台选择</h3><p><strong>华为云OceanConnect IoT 平台</strong></p><p>OceanConnect 是华为公司基于物联网、云计算和大数据等技术打造的开放生态环境。利用华为OceanConnect IoT平台,可以方便地将海量物联网终端连接到物联网云平台，实现设备和平台之间数据采集和命令下发的双向通信,对设备进行高效、可视化的管理,对数据进行整合分析,并通过调用平台面向行业强大的开放能力,快速构建创新的物联网业务。</p><p><strong>平台优势：</strong></p><p>敏捷易用的设备集成：广泛支持有线、无线多种网络接入方式,支持20多种IoT领域主流协议,预集成IoT领域主流厂商芯片/模组。<br>完备高效的设备管理：功能强大、界面友好的设备管理，提供完备的设备管理能力。<br>灵活开放的应用使能：开放设备管理、数据和规则等能力,面向智慧家庭、车联网、公共事业等领域的功能组件、数据分析能力。<br>高并发高可靠的云服务：支持亿级海量连接,业务可靠性达99.9%。端到端安全防护机制,基于设备级的认证、鉴权,针对低功耗安全传输协议(DTLS)优化,完善的应用级访问权限控制。</p><p><strong>选择原因：</strong></p><p>接入操作方便，数据易于获取，开发资料完善，开发免费</p><p><strong>操作过程：</strong></p><p>1.申请账户，创建产品</p><p>2.编写Profile插件</p><p>定义上报数据的属性，包括数据类型，范围，单位等。</p><p><img src="/2019/06/11/移动气象站/1558236816792.png" alt="1558236816792"></p><p>本次移动气象站设计，上报的数据共有11个，分别是：温度、湿度、PM2.5浓度、紫外线强度、经度（用于显示）、纬度（用于显示）、电压值（检测Arduino Nano的工作状况）、EorW（用于判断东西半球）、NorS（用于判断南北半球）、LongLong（精确的经度值，小数点后6位，用于准确定位）、LongLat（精确的纬度值，小数点后7位，用于准确定位）</p><p>3.编写编解码插件</p><p>用于对上报的码流数据进行解析，规定好上报各个数据的位长，通过此编解码插件即可对上报的数据进行划分，然后将16进制的ASCII值转换为对应的字符。之后保存并部署插件即可。</p><p><img src="/2019/06/11/移动气象站/1558237464902.png" alt="1558237464902"></p><p><img src="/2019/06/11/移动气象站/1558237506432.png" alt="1558237506432"></p><p>4.新增真实设备</p><p>使用模块的 IMEI 号新增设备，可以通过 AT指令(“AT+CGSN=1”)获取模块的的 IMEI 号</p><p>5.数据上报</p><p>主要用到如下两条指令</p><table><thead><tr><th align="center">AT指令</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">AT+NCDP=ip</td><td align="center">配置服务器地址,其中 ip 地址在平台对接信息中可以找到(位于左侧应用–&gt;对接信息–&gt;设备接入信息–&gt;49.4.85.232:5683 (CoAP)),故AT+NCDP=49.4.85.232</td></tr><tr><td align="center">AT+NMGS=length,data[,<seq_num>]</seq_num></td><td align="center">发送数据指令, length 表示后续数据长度(10 进制表示,后续数据的字节长度),data 表示需要发送的数据</td></tr></tbody></table><p><img src="/2019/06/11/移动气象站/1558238062125.png" alt="1558238062125"></p><p>NBIOT 发送完毕,可以在云平台的设备历史数据中查看(左侧产品–&gt;设备管理–&gt;选择刚<br>刚上报的设备–&gt;历史数据)</p><p>6.示例代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//数据上报 每10s上报一次100*100ms</span></span><br><span class="line"> <span class="keyword">if</span>(i==<span class="number">100</span>)&#123;</span><br><span class="line"> i=<span class="number">0</span>;</span><br><span class="line"> <span class="keyword">float</span> msg0[<span class="number">7</span>];</span><br><span class="line"> msg0[<span class="number">0</span>]=(<span class="keyword">float</span>)DHT11.temperature;</span><br><span class="line"> msg0[<span class="number">1</span>]=(<span class="keyword">float</span>)DHT11.humidity;</span><br><span class="line"> msg0[<span class="number">2</span>]=(dustDensity&gt;<span class="number">0.0</span>)? dustDensity:<span class="number">0.0</span>;</span><br><span class="line"> msg0[<span class="number">3</span>]=(uvIntensity&gt;<span class="number">0.0</span>)? uvIntensity:<span class="number">0.0</span>;</span><br><span class="line"> msg0[<span class="number">4</span>]=gps.location.lng();</span><br><span class="line"> msg0[<span class="number">5</span>]=gps.location.lat();</span><br><span class="line"> msg0[<span class="number">6</span>]=v;</span><br><span class="line"> </span><br><span class="line"> String msg=<span class="string">""</span>;</span><br><span class="line"> <span class="keyword">char</span> tmp[<span class="number">15</span>];</span><br><span class="line"></span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">7</span>;++j)</span><br><span class="line"> &#123;    </span><br><span class="line">   <span class="keyword">if</span> (msg0[j]&lt;=<span class="number">0</span>) dtostrf(<span class="number">0.000</span>,<span class="number">1</span>,<span class="number">3</span>,tmp);</span><br><span class="line">   <span class="keyword">if</span> (msg0[j]&gt;<span class="number">0</span> &amp;&amp; msg0[j]&lt;<span class="number">10</span>) dtostrf(msg0[j],<span class="number">1</span>,<span class="number">3</span>,tmp);</span><br><span class="line">   <span class="keyword">if</span> (msg0[j]&gt;=<span class="number">10</span> &amp;&amp; msg0[j]&lt;<span class="number">100</span>) dtostrf(msg0[j],<span class="number">2</span>,<span class="number">2</span>,tmp);</span><br><span class="line">   <span class="keyword">if</span> (msg0[j]&gt;=<span class="number">100</span>) dtostrf(msg0[j],<span class="number">3</span>,<span class="number">1</span>,tmp);</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">5</span>;++k)</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="keyword">if</span> (tmp[k]==<span class="string">'.'</span>) msg=msg+<span class="string">"2E"</span>;</span><br><span class="line">     <span class="keyword">else</span> msg=msg+<span class="string">'3'</span>+tmp[k];  </span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">memset</span>(tmp,<span class="number">0</span>,<span class="number">15</span>*<span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">if</span>(gps.location.lng()!=<span class="number">0.0</span>)  msg=msg+<span class="string">"454E"</span>;   <span class="comment">//EN</span></span><br><span class="line"> <span class="keyword">else</span> msg=msg+<span class="string">"5F5F"</span>;   <span class="comment">//下划线</span></span><br><span class="line"> <span class="keyword">if</span>(gps.location.lng()!=<span class="number">0.0</span>)</span><br><span class="line"> &#123;</span><br><span class="line"> dtostrf(gps.location.lng(),<span class="number">3</span>,<span class="number">6</span>,tmp);</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">10</span>;++k)</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="keyword">if</span> (tmp[k]==<span class="string">'.'</span>) msg=msg+<span class="string">"2E"</span>;</span><br><span class="line">     <span class="keyword">else</span> msg=msg+<span class="string">'3'</span>+tmp[k];  </span><br><span class="line">   &#125;</span><br><span class="line"> <span class="built_in">memset</span>(tmp,<span class="number">0</span>,<span class="number">15</span>*<span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(gps.location.lat()!=<span class="number">0.0</span>)</span><br><span class="line"> &#123;</span><br><span class="line"> dtostrf(gps.location.lat(),<span class="number">2</span>,<span class="number">7</span>,tmp);</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">10</span>;++k)</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="keyword">if</span> (tmp[k]==<span class="string">'.'</span>) msg=msg+<span class="string">"2E"</span>;</span><br><span class="line">     <span class="keyword">else</span> msg=msg+<span class="string">'3'</span>+tmp[k];  </span><br><span class="line">   &#125;</span><br><span class="line"> <span class="built_in">memset</span>(tmp,<span class="number">0</span>,<span class="number">15</span>*<span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span> (msg.length()==<span class="number">57</span>*<span class="number">2</span>)</span><br><span class="line"> Serial.println(String(<span class="string">""</span>)+<span class="string">"AT+NMGS=57,"</span>+msg);</span><br><span class="line"> <span class="keyword">if</span> (msg.length()==<span class="number">37</span>*<span class="number">2</span>)</span><br><span class="line"> Serial.println(String(<span class="string">""</span>)+<span class="string">"AT+NMGS=37,"</span>+msg);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="6-前端开发测试"><a href="#6-前端开发测试" class="headerlink" title="6.前端开发测试"></a>6.前端开发测试</h3><h3 id="7-PCB相关，还有盒子？"><a href="#7-PCB相关，还有盒子？" class="headerlink" title="7.PCB相关，还有盒子？"></a>7.PCB相关，还有盒子？</h3><h3 id="8-作品展示"><a href="#8-作品展示" class="headerlink" title="8.作品展示"></a>8.作品展示</h3><h2 id="和竞赛要求相比，还要补充"><a href="#和竞赛要求相比，还要补充" class="headerlink" title="和竞赛要求相比，还要补充"></a>和竞赛要求相比，还要补充</h2><h3 id="设计需求——随便编，像是物联网，天气预报，便携啥的"><a href="#设计需求——随便编，像是物联网，天气预报，便携啥的" class="headerlink" title="设计需求——随便编，像是物联网，天气预报，便携啥的"></a>设计需求——随便编，像是物联网，天气预报，便携啥的</h3><h3 id="特色创新——编"><a href="#特色创新——编" class="headerlink" title="特色创新——编"></a>特色创新——编</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是报告《移动气象站》的摘要&lt;/p&gt;
    
    </summary>
    
      <category term="课程" scheme="http://yoursite.com/categories/%E8%AF%BE%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>world</title>
    <link href="http://yoursite.com/2019/06/11/hello-world/"/>
    <id>http://yoursite.com/2019/06/11/hello-world/</id>
    <published>2019-06-11T02:14:45.000Z</published>
    <updated>2019-06-26T06:15:48.086Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
  </entry>
  
</feed>
